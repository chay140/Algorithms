name: Update README

on:
  push:
    branches:
      - main  # Adjust if using a different default branch
    paths-ignore:
      - '**/*.yml'  # Exclude pushes to YAML files, including this workflow file

jobs:
  update-readme:
    if: contains(github.event.head_commit.message, '[level')  # Only run if commit message includes "[level"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Count solutions and update README
        run: |
          # Define the README file path
          README_FILE="README.md"

          total_files=$(find 프로그래머스 -type f | wc -l)
          total_solved=$(($total_files / 2))

          # Add introductory content
          echo "# 알고리즘 풀이 ![js](https://img.shields.io/badge/JavaScript-F7DF1E?style=for-the-badge&logo=JavaScript&logoColor=black)" > $README_FILE
          echo "> 백준허브로 연동된 자동 커밋 리포지토리 [BaekjoonHub](https://github.com/BaekjoonHub/BaekjoonHub)." >> $README_FILE
          echo ">" >> $README_FILE
          echo "> _Readme는 문제 번호에 따라 자동 업데이트 합니다._" >> $README_FILE
          echo "" >> $README_FILE  # Blank line for spacing
          echo "# 프로그래머스 문제" >> $README_FILE
          echo "**총 풀이 수: $total_solved**" >> $README_FILE

          # Append each level section
          for level_folder in $(find 프로그래머스 -mindepth 1 -maxdepth 1 -type d | sort); do
            level=$(basename "$level_folder")
            echo "" >> $README_FILE
            echo "## Level $level" >> $README_FILE
            echo "<details>" >> $README_FILE
            echo "<summary>더 자세히</summary>" >> $README_FILE
            echo "<div markdown="1">" >> $README_FILE
            echo "" >> $README_FILE
            echo "| No.# | 코드 (내 풀이) | 풀어본 횟수 | 해결여부 | 최근 푼 날짜 |" >> $README_FILE
            echo "| :----: | :-------------: | :-------: | :----: | :---------: |" >> $README_FILE
            
            # Find each problem in the level directory
            problem_count=1
            level_folder="프로그래머스/$level"
            for problem in $(ls "$level_folder"); do
              problem_path="$level_folder/$problem"
              problem_name=$(basename "$problem")
              commit_count=$(git rev-list --count HEAD -- "$problem_path")
              latest_date=$(git log -1 --date=short --pretty=format:"%ad" -- "$problem_path")
              problem_link="https://github.com/chay140/Algorithms/tree/main/$problem_path"
              
              # Append the problem entry to the README
              echo "| No.$problem_count | [$problem_name]($problem_link) | $commit_count | O | $latest_date |" >> $README_FILE

              # Increment the problem counter
              problem_count=$((problem_count + 1))
            done
            echo "" >> $README_FILE
            echo "<br>" >> $README_FILE
            echo "</div>" >> $README_FILE
            echo "</details>" >> $README_FILE
            echo "" >> $README_FILE
            echo "Level $level: 총 $problem_count 문제" >> $README_FILE
          done

          # Configure Git and commit the README update
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add $README_FILE
          git commit -m "Auto-update README with latest problem stats"
      
      - name: Push changes
        run: git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
